# 외계어 사전 
def solution(spell, dic):
  spell = set(spell)            # 한번씩만 사용, 중복된 원소를 갖지 않음 set
  for i in dic:
    if spell.issubset(set(i)):  # dic에 있는 중복되지 않는 요소들이 배열 spell의 하위집합이면(spell에 답긴 알파벳모두사용) 1 아니면 2
      return 1
  return 2
  

# 삼각형의 완성조건(2)
def solution(sides):
  return (sorted(sides)[0] * 2) -1
  

# 숨어있는 숫자의 덧셈
import re                                    # import re가 되어 정규표현식을 쓸 수가 있더라...

def solution(my_string):                     # re.findall(pattern, string): string에서 pattern에 해당하는 내용들을 찾아서 리스트로 리턴
  result = re.findall(r'\d+', my_string)     # r'\d+' 패턴 : 연속된 숫자들을 하나의 여러자리 숫자로 리스트에 저장
  answer = 0
  for i in result:
    answer += int(i)
  return (answer)
  


# 최댓값 만들기(2)
def solution(numbers):
    numbers.sort(reverse = True)                                    # 숫자리스트를 내림차순으로 정렬하여...(절대값순 정렬은 의미 없더라...)
    return max(numbers[0] * numbers[1],numbers[-1] * numbers[-2])   # 가장큰수와 그다음 큰수의 곱과, 가장작은 수(음수)와 그 다음 작은수(음수)의 곱 중에 최대값 반환
